þ1
_C:\Users\parthiv\Documents\Parthiv\ASP .NET Core\DemoPractical\Controllers\AccountController.cs
	namespace 	
DemoPractical
 
. 
Controllers #
{		 
[

 
ApiController

 
]

 
[ 
Route 

(
 
$str &
)& '
]' (
public 

class 
AccountController "
:# $

Controller% /
{ 
private 
readonly 
UserManager $
<$ %
IdentityUser% 1
>1 2
_userManager3 ?
;? @
private 
readonly 
SignInManager &
<& '
IdentityUser' 3
>3 4
_signManager5 A
;A B
private 
readonly 
ILogger  
<  !
AccountController! 2
>2 3
_logger4 ;
;; <
public 
AccountController  
(  !
SignInManager! .
<. /
IdentityUser/ ;
>; <
signInManager= J
,J K
UserManager  +
<+ ,
IdentityUser, 8
>8 9
userManager: E
,E F
ILogger  '
<' (
AccountController( 9
>9 :
logger; A
)A B
{ 	
_userManager 
= 
userManager &
;& '
_signManager 
= 
signInManager (
;( )
_logger 
= 
logger 
; 
} 	
[ 	
HttpPost	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Login) .
(. /
[/ 0
FromBody0 8
]8 9
LoginViewModel: H
userI M
)M N
{ 	
if 
( 

ModelState 
. 
IsValid "
)" #
{ 
var   
	validUser   
=   
await    %
_userManager  & 2
.  2 3
FindByEmailAsync  3 C
(  C D
user  D H
.  H I
Email  I N
)  N O
;  O P
if!! 
(!! 
	validUser!! 
!=!!  
null!!! %
&&!!& (
await!!) .
_userManager!!/ ;
.!!; <
CheckPasswordAsync!!< N
(!!N O
	validUser!!O X
,!!X Y
user!!Z ^
.!!^ _
Password!!_ g
)!!g h
)!!h i
{"" 
await## 
_signManager## &
.##& '
SignInAsync##' 2
(##2 3
	validUser##3 <
,##< =
isPersistent##> J
:##J K
true##L P
)##P Q
;##Q R
_logger$$ 
.$$ 
LogInformation$$ *
($$* +
$str$$+ H
)$$H I
;$$I J
return%% 
Ok%% 
(%% 
$str%% ;
)%%; <
;%%< =
}&& 
else'' 
{(( 
_logger)) 
.)) 
LogError)) $
())$ %
$str))% Z
)))Z [
;))[ \
return** 
Unauthorized** '
(**' (
$str**( ;
)**; <
;**< =
}++ 
},, 
else-- 
{.. 
_logger// 
.// 
LogError//  
(//  !
$str//! V
)//V W
;//W X
return00 
Unauthorized00 #
(00# $
$str00$ 7
)007 8
;008 9
}11 
}22 	
[44 	
HttpPost44	 
]44 
public55 
async55 
Task55 
<55 
IActionResult55 '
>55' (
Register55) 1
(551 2
RegisterViewModel552 C
user55D H
)55H I
{66 	
if77 
(77 

ModelState77 
.77 
IsValid77 !
)77! "
{88 
var99 
newUser99 
=99 
new99 !
IdentityUser99" .
(99. /
)99/ 0
{:: 
Email;; 
=;; 
user;;  
.;;  !
Email;;! &
,;;& '
UserName<< 
=<< 
user<< #
.<<# $
Email<<$ )
}== 
;== 
var?? 
result?? 
=?? 
await?? "
_userManager??# /
.??/ 0
CreateAsync??0 ;
(??; <
newUser??< C
,??C D
user??E I
.??I J
Password??J R
)??R S
;??S T
if@@ 
(@@ 
!@@ 
result@@ 
.@@ 
	Succeeded@@ %
)@@% &
{AA 
_loggerBB 
.BB 
LogErrorBB $
(BB$ %
$strBB% [
)BB[ \
;BB\ ]
returnCC 

StatusCodeCC %
(CC% &
StatusCodesCC& 1
.CC1 2(
Status500InternalServerErrorCC2 N
)CCN O
;CCO P
}DD 
_loggerEE 
.EE 
LogInformationEE &
(EE& '
$strEE' E
)EEE F
;EEF G
returnFF 
OkFF 
(FF 
$strFF 5
)FF5 6
;FF6 7
}GG 
elseHH 
{II 
_loggerJJ 
.JJ 
LogErrorJJ  
(JJ  !
$strJJ! S
)JJS T
;JJT U
returnKK 

BadRequestKK !
(KK! "
$strKK" >
)KK> ?
;KK? @
}LL 
}NN 	
[PP 	
HttpPostPP	 
]PP 
publicQQ 
asyncQQ 
TaskQQ 
<QQ 
IActionResultQQ '
>QQ' (
LogoutQQ) /
(QQ/ 0
)QQ0 1
{RR 	
awaitSS 
_signManagerSS 
.SS 
SignOutAsyncSS +
(SS+ ,
)SS, -
;SS- .
_loggerTT 
.TT 
LogInformationTT "
(TT" #
$strTT# A
)TTA B
;TTB C
returnUU 
OkUU 
(UU 
$strUU 4
)UU4 5
;UU5 6
}VV 	
}WW 
}XX ò+
]C:\Users\parthiv\Documents\Parthiv\ASP .NET Core\DemoPractical\Controllers\MovieController.cs
	namespace 	
DemoPractical
 
. 
Controllers #
{ 
[		 
ApiController		 
]		 
[

 
Route

 

(


 
$str

 &
)

& '
]

' (
public 

class 
MovieController  
:! "

Controller# -
{ 
private 
readonly 
IMovieRepository )
_movieRepository* :
;: ;
private 
readonly 
ILogger  
<  !
MovieController! 0
>0 1
_logger2 9
;9 :
public 
MovieController 
( 
IMovieRepository /
movieRepository0 ?
,? @
ILogger  '
<' (
MovieController( 7
>7 8
logger9 ?
)? @
{ 	
_movieRepository 
= 
movieRepository .
;. /
_logger 
= 
logger 
; 
} 	
[ 	
HttpGet	 
] 
public 
IEnumerable 
< 
Movie  
>  !
GetAll" (
(( )
)) *
{ 	
var 
movies 
= 
_movieRepository )
.) *
GetAllMovieDetails* <
(< =
)= >
;> ?
_logger 
. 
LogInformation "
(" #
$str# F
)F G
;G H
return 
movies 
; 
} 	
[ 	
HttpGet	 
] 
[ 	
OutputCache	 
( 
Duration 
= 
$num  !
)! "
]" #
public   
Movie   
	GetByName   
(   
string   %
name  & *
)  * +
{!! 	
var"" 
movieDetails"" 
="" 
_movieRepository"" /
.""/ 0!
GetMovieDetailsByName""0 E
(""E F
name""F J
)""J K
;""K L
_logger## 
.## 
LogInformation## "
(##" #
$str### V
)##V W
;##W X
return$$ 
movieDetails$$ 
;$$  
}%% 	
['' 	
	Authorize''	 
]'' 
[(( 	
HttpPost((	 
](( 
public)) 
string)) 
AddMovie)) 
()) 
Movie)) $
movie))% *
)))* +
{** 	
if++ 
(++ 

ModelState++ 
.++ 
IsValid++ !
)++! "
{,, 
var-- 
status-- 
=-- 
_movieRepository-- -
.--- .
AddNewMovie--. 9
(--9 :
movie--: ?
)--? @
;--@ A
_logger.. 
... 
LogInformation.. &
(..& '
$str..' E
)..E F
;..F G
return// 
status// 
;// 
}00 
else11 
{22 
_logger33 
.33 
LogError33  
(33  !
$str33! N
)33N O
;33O P
return44 
$str44 9
;449 :
}55 
}77 	
[99 	
	Authorize99	 
]99 
[:: 	
HttpPut::	 
]:: 
public;; 
string;; 
	EditMovie;; 
(;;  
string;;  &
name;;' +
,;;+ ,
Movie;;- 2
movie;;3 8
);;8 9
{<< 	
if== 
(== 

ModelState== 
.== 
IsValid== !
)==! "
{>> 
var?? 
status?? 
=?? 
_movieRepository?? -
.??- .
UpdateMovieDetails??. @
(??@ A
name??A E
,??E F
movie??G L
)??L M
;??M N
_logger@@ 
.@@ 
LogInformation@@ &
(@@& '
$str@@' B
)@@B C
;@@C D
returnAA 
statusAA 
;AA 
}BB 
elseCC 
{DD 
_loggerEE 
.EE 
LogErrorEE  
(EE  !
$strEE! U
)EEU V
;EEV W
returnFF 
$strFF 9
;FF9 :
}GG 
}II 	
[KK 	
	AuthorizeKK	 
]KK 
[LL 	

HttpDeleteLL	 
]LL 
publicMM 
stringMM 
DeleteMovieMM !
(MM! "
stringMM" (
nameMM) -
)MM- .
{NN 	
ifOO 
(OO 

ModelStateOO 
.OO 
IsValidOO "
)OO" #
{PP 
varQQ 
statusQQ 
=QQ 
_movieRepositoryQQ -
.QQ- .
DeleteMovieDetailsQQ. @
(QQ@ A
nameQQA E
)QQE F
;QQF G
_loggerRR 
.RR 
LogInformationRR &
(RR& '
$strRR' C
)RRC D
;RRD E
returnSS 
statusSS 
;SS 
}TT 
elseUU 
{VV 
_loggerWW 
.WW 
LogErrorWW  
(WW  !
$strWW! S
)WWS T
;WWT U
returnXX 
$strXX 6
;XX6 7
}YY 
}ZZ 	
}[[ 
}\\ 	
UC:\Users\parthiv\Documents\Parthiv\ASP .NET Core\DemoPractical\Data\MovieDBContext.cs
	namespace 	
DemoPractical
 
. 
Data 
{ 
public 

class 
MovieDBContext 
:  
IdentityDbContext! 2
{ 
public		 
MovieDBContext		 
(		 
DbContextOptions		 .
<		. /
MovieDBContext		/ =
>		= >
options		? F
)		F G
:		G H
base		I M
(		M N
options		N U
)		U V
{

 	
} 	
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
builder= D
)D E
{ 	
base 
. 
OnModelCreating  
(  !
builder! (
)( )
;) *
} 	
public 
DbSet 
< 
Movie 
> 
Movies "
{# $
get% (
;( )
set* -
;- .
}/ 0
} 
} ¢
^C:\Users\parthiv\Documents\Parthiv\ASP .NET Core\DemoPractical\Migrations\20230727050001_v1.cs
	namespace 	
DemoPractical
 
. 

Migrations "
{ 
public 

partial 
class 
v1 
: 
	Migration '
{		 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
MovieId 
= 
table #
.# $
Column$ *
<* +
int+ .
>. /
(/ 0
type0 4
:4 5
$str6 ;
,; <
nullable= E
:E F
falseG L
)L M
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
	MovieName 
= 
table  %
.% &
Column& ,
<, -
string- 3
>3 4
(4 5
type5 9
:9 :
$str; J
,J K
nullableL T
:T U
falseV [
)[ \
,\ ]
Year 
= 
table  
.  !
Column! '
<' (
int( +
>+ ,
(, -
type- 1
:1 2
$str3 8
,8 9
nullable: B
:B C
falseD I
)I J
,J K
Rating 
= 
table "
." #
Column# )
<) *
double* 0
>0 1
(1 2
type2 6
:6 7
$str8 ?
,? @
nullableA I
:I J
falseK P
)P Q
,Q R
Length 
= 
table "
." #
Column# )
<) *
double* 0
>0 1
(1 2
type2 6
:6 7
$str8 ?
,? @
nullableA I
:I J
falseK P
)P Q
,Q R
Genre 
= 
table !
.! "
Column" (
<( )
string) /
>/ 0
(0 1
type1 5
:5 6
$str7 F
,F G
nullableH P
:P Q
falseR W
)W X
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 0
,0 1
x2 3
=>4 6
x7 8
.8 9
MovieId9 @
)@ A
;A B
} 
) 
; 
} 	
	protected   
override   
void   
Down    $
(  $ %
MigrationBuilder  % 5
migrationBuilder  6 F
)  F G
{!! 	
migrationBuilder"" 
."" 
	DropTable"" &
(""& '
name## 
:## 
$str## 
)## 
;##  
}$$ 	
}%% 
}&& ñ
^C:\Users\parthiv\Documents\Parthiv\ASP .NET Core\DemoPractical\Migrations\20230727061140_v2.cs
	namespace 	
DemoPractical
 
. 

Migrations "
{ 
public 

partial 
class 
v2 
: 
	Migration '
{		 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
UserId 
= 
table "
." #
Column# )
<) *
int* -
>- .
(. /
type/ 3
:3 4
$str5 :
,: ;
nullable< D
:D E
falseF K
)K L
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 E
,E F
nullableG O
:O P
falseQ V
)V W
,W X
Email 
= 
table !
.! "
Column" (
<( )
string) /
>/ 0
(0 1
type1 5
:5 6
$str7 F
,F G
nullableH P
:P Q
falseR W
)W X
,X Y
Address 
= 
table #
.# $
Column$ *
<* +
string+ 1
>1 2
(2 3
type3 7
:7 8
$str9 H
,H I
nullableJ R
:R S
falseT Y
)Y Z
,Z [
Password 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: I
,I J
nullableK S
:S T
falseU Z
)Z [
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% /
,/ 0
x1 2
=>3 5
x6 7
.7 8
UserId8 >
)> ?
;? @
} 
) 
; 
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{   	
migrationBuilder!! 
.!! 
	DropTable!! &
(!!& '
name"" 
:"" 
$str"" 
)"" 
;"" 
}## 	
}$$ 
}%% þÚ
^C:\Users\parthiv\Documents\Parthiv\ASP .NET Core\DemoPractical\Migrations\20230727062726_v3.cs
	namespace 	
DemoPractical
 
. 

Migrations "
{ 
public		 

partial		 
class		 
v3		 
:		 
	Migration		 '
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
	DropTable &
(& '
name 
: 
$str 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str #
,# $
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
string& ,
>, -
(- .
type. 2
:2 3
$str4 C
,C D
nullableE M
:M N
falseO T
)T U
,U V
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 E
,E F
	maxLengthG P
:P Q
$numR U
,U V
nullableW _
:_ `
truea e
)e f
,f g
NormalizedName "
=# $
table% *
.* +
Column+ 1
<1 2
string2 8
>8 9
(9 :
type: >
:> ?
$str@ O
,O P
	maxLengthQ Z
:Z [
$num\ _
,_ `
nullablea i
:i j
truek o
)o p
,p q
ConcurrencyStamp $
=% &
table' ,
., -
Column- 3
<3 4
string4 :
>: ;
(; <
type< @
:@ A
$strB Q
,Q R
nullableS [
:[ \
true] a
)a b
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 5
,5 6
x7 8
=>9 ;
x< =
.= >
Id> @
)@ A
;A B
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name   
:   
$str   #
,  # $
columns!! 
:!! 
table!! 
=>!! !
new!!" %
{"" 
Id## 
=## 
table## 
.## 
Column## %
<##% &
string##& ,
>##, -
(##- .
type##. 2
:##2 3
$str##4 C
,##C D
nullable##E M
:##M N
false##O T
)##T U
,##U V
UserName$$ 
=$$ 
table$$ $
.$$$ %
Column$$% +
<$$+ ,
string$$, 2
>$$2 3
($$3 4
type$$4 8
:$$8 9
$str$$: I
,$$I J
	maxLength$$K T
:$$T U
$num$$V Y
,$$Y Z
nullable$$[ c
:$$c d
true$$e i
)$$i j
,$$j k
NormalizedUserName%% &
=%%' (
table%%) .
.%%. /
Column%%/ 5
<%%5 6
string%%6 <
>%%< =
(%%= >
type%%> B
:%%B C
$str%%D S
,%%S T
	maxLength%%U ^
:%%^ _
$num%%` c
,%%c d
nullable%%e m
:%%m n
true%%o s
)%%s t
,%%t u
Email&& 
=&& 
table&& !
.&&! "
Column&&" (
<&&( )
string&&) /
>&&/ 0
(&&0 1
type&&1 5
:&&5 6
$str&&7 F
,&&F G
	maxLength&&H Q
:&&Q R
$num&&S V
,&&V W
nullable&&X `
:&&` a
true&&b f
)&&f g
,&&g h
NormalizedEmail'' #
=''$ %
table''& +
.''+ ,
Column'', 2
<''2 3
string''3 9
>''9 :
('': ;
type''; ?
:''? @
$str''A P
,''P Q
	maxLength''R [
:''[ \
$num''] `
,''` a
nullable''b j
:''j k
true''l p
)''p q
,''q r
EmailConfirmed(( "
=((# $
table((% *
.((* +
Column((+ 1
<((1 2
bool((2 6
>((6 7
(((7 8
type((8 <
:((< =
$str((> C
,((C D
nullable((E M
:((M N
false((O T
)((T U
,((U V
PasswordHash))  
=))! "
table))# (
.))( )
Column))) /
<))/ 0
string))0 6
>))6 7
())7 8
type))8 <
:))< =
$str))> M
,))M N
nullable))O W
:))W X
true))Y ]
)))] ^
,))^ _
SecurityStamp** !
=**" #
table**$ )
.**) *
Column*** 0
<**0 1
string**1 7
>**7 8
(**8 9
type**9 =
:**= >
$str**? N
,**N O
nullable**P X
:**X Y
true**Z ^
)**^ _
,**_ `
ConcurrencyStamp++ $
=++% &
table++' ,
.++, -
Column++- 3
<++3 4
string++4 :
>++: ;
(++; <
type++< @
:++@ A
$str++B Q
,++Q R
nullable++S [
:++[ \
true++] a
)++a b
,++b c
PhoneNumber,, 
=,,  !
table,," '
.,,' (
Column,,( .
<,,. /
string,,/ 5
>,,5 6
(,,6 7
type,,7 ;
:,,; <
$str,,= L
,,,L M
nullable,,N V
:,,V W
true,,X \
),,\ ]
,,,] ^ 
PhoneNumberConfirmed-- (
=--) *
table--+ 0
.--0 1
Column--1 7
<--7 8
bool--8 <
>--< =
(--= >
type--> B
:--B C
$str--D I
,--I J
nullable--K S
:--S T
false--U Z
)--Z [
,--[ \
TwoFactorEnabled.. $
=..% &
table..' ,
..., -
Column..- 3
<..3 4
bool..4 8
>..8 9
(..9 :
type..: >
:..> ?
$str..@ E
,..E F
nullable..G O
:..O P
false..Q V
)..V W
,..W X

LockoutEnd// 
=//  
table//! &
.//& '
Column//' -
<//- .
DateTimeOffset//. <
>//< =
(//= >
type//> B
://B C
$str//D T
,//T U
nullable//V ^
://^ _
true//` d
)//d e
,//e f
LockoutEnabled00 "
=00# $
table00% *
.00* +
Column00+ 1
<001 2
bool002 6
>006 7
(007 8
type008 <
:00< =
$str00> C
,00C D
nullable00E M
:00M N
false00O T
)00T U
,00U V
AccessFailedCount11 %
=11& '
table11( -
.11- .
Column11. 4
<114 5
int115 8
>118 9
(119 :
type11: >
:11> ?
$str11@ E
,11E F
nullable11G O
:11O P
false11Q V
)11V W
}22 
,22 
constraints33 
:33 
table33 "
=>33# %
{44 
table55 
.55 

PrimaryKey55 $
(55$ %
$str55% 5
,555 6
x557 8
=>559 ;
x55< =
.55= >
Id55> @
)55@ A
;55A B
}66 
)66 
;66 
migrationBuilder88 
.88 
CreateTable88 (
(88( )
name99 
:99 
$str99 (
,99( )
columns:: 
::: 
table:: 
=>:: !
new::" %
{;; 
Id<< 
=<< 
table<< 
.<< 
Column<< %
<<<% &
int<<& )
><<) *
(<<* +
type<<+ /
:<</ 0
$str<<1 6
,<<6 7
nullable<<8 @
:<<@ A
false<<B G
)<<G H
.== 

Annotation== #
(==# $
$str==$ 8
,==8 9
$str==: @
)==@ A
,==A B
RoleId>> 
=>> 
table>> "
.>>" #
Column>># )
<>>) *
string>>* 0
>>>0 1
(>>1 2
type>>2 6
:>>6 7
$str>>8 G
,>>G H
nullable>>I Q
:>>Q R
false>>S X
)>>X Y
,>>Y Z
	ClaimType?? 
=?? 
table??  %
.??% &
Column??& ,
<??, -
string??- 3
>??3 4
(??4 5
type??5 9
:??9 :
$str??; J
,??J K
nullable??L T
:??T U
true??V Z
)??Z [
,??[ \

ClaimValue@@ 
=@@  
table@@! &
.@@& '
Column@@' -
<@@- .
string@@. 4
>@@4 5
(@@5 6
type@@6 :
:@@: ;
$str@@< K
,@@K L
nullable@@M U
:@@U V
true@@W [
)@@[ \
}AA 
,AA 
constraintsBB 
:BB 
tableBB "
=>BB# %
{CC 
tableDD 
.DD 

PrimaryKeyDD $
(DD$ %
$strDD% :
,DD: ;
xDD< =
=>DD> @
xDDA B
.DDB C
IdDDC E
)DDE F
;DDF G
tableEE 
.EE 

ForeignKeyEE $
(EE$ %
nameFF 
:FF 
$strFF F
,FFF G
columnGG 
:GG 
xGG  !
=>GG" $
xGG% &
.GG& '
RoleIdGG' -
,GG- .
principalTableHH &
:HH& '
$strHH( 5
,HH5 6
principalColumnII '
:II' (
$strII) -
,II- .
onDeleteJJ  
:JJ  !
ReferentialActionJJ" 3
.JJ3 4
CascadeJJ4 ;
)JJ; <
;JJ< =
}KK 
)KK 
;KK 
migrationBuilderMM 
.MM 
CreateTableMM (
(MM( )
nameNN 
:NN 
$strNN (
,NN( )
columnsOO 
:OO 
tableOO 
=>OO !
newOO" %
{PP 
IdQQ 
=QQ 
tableQQ 
.QQ 
ColumnQQ %
<QQ% &
intQQ& )
>QQ) *
(QQ* +
typeQQ+ /
:QQ/ 0
$strQQ1 6
,QQ6 7
nullableQQ8 @
:QQ@ A
falseQQB G
)QQG H
.RR 

AnnotationRR #
(RR# $
$strRR$ 8
,RR8 9
$strRR: @
)RR@ A
,RRA B
UserIdSS 
=SS 
tableSS "
.SS" #
ColumnSS# )
<SS) *
stringSS* 0
>SS0 1
(SS1 2
typeSS2 6
:SS6 7
$strSS8 G
,SSG H
nullableSSI Q
:SSQ R
falseSSS X
)SSX Y
,SSY Z
	ClaimTypeTT 
=TT 
tableTT  %
.TT% &
ColumnTT& ,
<TT, -
stringTT- 3
>TT3 4
(TT4 5
typeTT5 9
:TT9 :
$strTT; J
,TTJ K
nullableTTL T
:TTT U
trueTTV Z
)TTZ [
,TT[ \

ClaimValueUU 
=UU  
tableUU! &
.UU& '
ColumnUU' -
<UU- .
stringUU. 4
>UU4 5
(UU5 6
typeUU6 :
:UU: ;
$strUU< K
,UUK L
nullableUUM U
:UUU V
trueUUW [
)UU[ \
}VV 
,VV 
constraintsWW 
:WW 
tableWW "
=>WW# %
{XX 
tableYY 
.YY 

PrimaryKeyYY $
(YY$ %
$strYY% :
,YY: ;
xYY< =
=>YY> @
xYYA B
.YYB C
IdYYC E
)YYE F
;YYF G
tableZZ 
.ZZ 

ForeignKeyZZ $
(ZZ$ %
name[[ 
:[[ 
$str[[ F
,[[F G
column\\ 
:\\ 
x\\  !
=>\\" $
x\\% &
.\\& '
UserId\\' -
,\\- .
principalTable]] &
:]]& '
$str]]( 5
,]]5 6
principalColumn^^ '
:^^' (
$str^^) -
,^^- .
onDelete__  
:__  !
ReferentialAction__" 3
.__3 4
Cascade__4 ;
)__; <
;__< =
}`` 
)`` 
;`` 
migrationBuilderbb 
.bb 
CreateTablebb (
(bb( )
namecc 
:cc 
$strcc (
,cc( )
columnsdd 
:dd 
tabledd 
=>dd !
newdd" %
{ee 
LoginProviderff !
=ff" #
tableff$ )
.ff) *
Columnff* 0
<ff0 1
stringff1 7
>ff7 8
(ff8 9
typeff9 =
:ff= >
$strff? N
,ffN O
nullableffP X
:ffX Y
falseffZ _
)ff_ `
,ff` a
ProviderKeygg 
=gg  !
tablegg" '
.gg' (
Columngg( .
<gg. /
stringgg/ 5
>gg5 6
(gg6 7
typegg7 ;
:gg; <
$strgg= L
,ggL M
nullableggN V
:ggV W
falseggX ]
)gg] ^
,gg^ _
ProviderDisplayNamehh '
=hh( )
tablehh* /
.hh/ 0
Columnhh0 6
<hh6 7
stringhh7 =
>hh= >
(hh> ?
typehh? C
:hhC D
$strhhE T
,hhT U
nullablehhV ^
:hh^ _
truehh` d
)hhd e
,hhe f
UserIdii 
=ii 
tableii "
.ii" #
Columnii# )
<ii) *
stringii* 0
>ii0 1
(ii1 2
typeii2 6
:ii6 7
$strii8 G
,iiG H
nullableiiI Q
:iiQ R
falseiiS X
)iiX Y
}jj 
,jj 
constraintskk 
:kk 
tablekk "
=>kk# %
{ll 
tablemm 
.mm 

PrimaryKeymm $
(mm$ %
$strmm% :
,mm: ;
xmm< =
=>mm> @
newmmA D
{mmE F
xmmG H
.mmH I
LoginProvidermmI V
,mmV W
xmmX Y
.mmY Z
ProviderKeymmZ e
}mmf g
)mmg h
;mmh i
tablenn 
.nn 

ForeignKeynn $
(nn$ %
nameoo 
:oo 
$stroo F
,ooF G
columnpp 
:pp 
xpp  !
=>pp" $
xpp% &
.pp& '
UserIdpp' -
,pp- .
principalTableqq &
:qq& '
$strqq( 5
,qq5 6
principalColumnrr '
:rr' (
$strrr) -
,rr- .
onDeletess  
:ss  !
ReferentialActionss" 3
.ss3 4
Cascadess4 ;
)ss; <
;ss< =
}tt 
)tt 
;tt 
migrationBuildervv 
.vv 
CreateTablevv (
(vv( )
nameww 
:ww 
$strww '
,ww' (
columnsxx 
:xx 
tablexx 
=>xx !
newxx" %
{yy 
UserIdzz 
=zz 
tablezz "
.zz" #
Columnzz# )
<zz) *
stringzz* 0
>zz0 1
(zz1 2
typezz2 6
:zz6 7
$strzz8 G
,zzG H
nullablezzI Q
:zzQ R
falsezzS X
)zzX Y
,zzY Z
RoleId{{ 
={{ 
table{{ "
.{{" #
Column{{# )
<{{) *
string{{* 0
>{{0 1
({{1 2
type{{2 6
:{{6 7
$str{{8 G
,{{G H
nullable{{I Q
:{{Q R
false{{S X
){{X Y
}|| 
,|| 
constraints}} 
:}} 
table}} "
=>}}# %
{~~ 
table 
. 

PrimaryKey $
($ %
$str% 9
,9 :
x; <
=>= ?
new@ C
{D E
xF G
.G H
UserIdH N
,N O
xP Q
.Q R
RoleIdR X
}Y Z
)Z [
;[ \
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 E
,
E F
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
RoleId
' -
,
- .
principalTable
 &
:
& '
$str
( 5
,
5 6
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Cascade
4 ;
)
; <
;
< =
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 E
,
E F
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
UserId
' -
,
- .
principalTable
 &
:
& '
$str
( 5
,
5 6
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Cascade
4 ;
)
; <
;
< =
}
 
)
 
;
 
migrationBuilder
 
.
 
CreateTable
 (
(
( )
name
 
:
 
$str
 (
,
( )
columns
 
:
 
table
 
=>
 !
new
" %
{
 
UserId
 
=
 
table
 "
.
" #
Column
# )
<
) *
string
* 0
>
0 1
(
1 2
type
2 6
:
6 7
$str
8 G
,
G H
nullable
I Q
:
Q R
false
S X
)
X Y
,
Y Z
LoginProvider
 !
=
" #
table
$ )
.
) *
Column
* 0
<
0 1
string
1 7
>
7 8
(
8 9
type
9 =
:
= >
$str
? N
,
N O
nullable
P X
:
X Y
false
Z _
)
_ `
,
` a
Name
 
=
 
table
  
.
  !
Column
! '
<
' (
string
( .
>
. /
(
/ 0
type
0 4
:
4 5
$str
6 E
,
E F
nullable
G O
:
O P
false
Q V
)
V W
,
W X
Value
 
=
 
table
 !
.
! "
Column
" (
<
( )
string
) /
>
/ 0
(
0 1
type
1 5
:
5 6
$str
7 F
,
F G
nullable
H P
:
P Q
true
R V
)
V W
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% :
,
: ;
x
< =
=>
> @
new
A D
{
E F
x
G H
.
H I
UserId
I O
,
O P
x
Q R
.
R S
LoginProvider
S `
,
` a
x
b c
.
c d
Name
d h
}
i j
)
j k
;
k l
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 F
,
F G
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
UserId
' -
,
- .
principalTable
 &
:
& '
$str
( 5
,
5 6
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Cascade
4 ;
)
; <
;
< =
}
   
)
   
;
   
migrationBuilder
¢¢ 
.
¢¢ 
CreateIndex
¢¢ (
(
¢¢( )
name
££ 
:
££ 
$str
££ 2
,
££2 3
table
¤¤ 
:
¤¤ 
$str
¤¤ )
,
¤¤) *
column
¥¥ 
:
¥¥ 
$str
¥¥  
)
¥¥  !
;
¥¥! "
migrationBuilder
§§ 
.
§§ 
CreateIndex
§§ (
(
§§( )
name
¨¨ 
:
¨¨ 
$str
¨¨ %
,
¨¨% &
table
©© 
:
©© 
$str
©© $
,
©©$ %
column
ªª 
:
ªª 
$str
ªª (
,
ªª( )
unique
«« 
:
«« 
true
«« 
,
«« 
filter
¬¬ 
:
¬¬ 
$str
¬¬ 6
)
¬¬6 7
;
¬¬7 8
migrationBuilder
®® 
.
®® 
CreateIndex
®® (
(
®®( )
name
¯¯ 
:
¯¯ 
$str
¯¯ 2
,
¯¯2 3
table
°° 
:
°° 
$str
°° )
,
°°) *
column
±± 
:
±± 
$str
±±  
)
±±  !
;
±±! "
migrationBuilder
³³ 
.
³³ 
CreateIndex
³³ (
(
³³( )
name
´´ 
:
´´ 
$str
´´ 2
,
´´2 3
table
µµ 
:
µµ 
$str
µµ )
,
µµ) *
column
¶¶ 
:
¶¶ 
$str
¶¶  
)
¶¶  !
;
¶¶! "
migrationBuilder
¸¸ 
.
¸¸ 
CreateIndex
¸¸ (
(
¸¸( )
name
¹¹ 
:
¹¹ 
$str
¹¹ 1
,
¹¹1 2
table
ºº 
:
ºº 
$str
ºº (
,
ºº( )
column
»» 
:
»» 
$str
»»  
)
»»  !
;
»»! "
migrationBuilder
½½ 
.
½½ 
CreateIndex
½½ (
(
½½( )
name
¾¾ 
:
¾¾ 
$str
¾¾ "
,
¾¾" #
table
¿¿ 
:
¿¿ 
$str
¿¿ $
,
¿¿$ %
column
ÀÀ 
:
ÀÀ 
$str
ÀÀ )
)
ÀÀ) *
;
ÀÀ* +
migrationBuilder
ÂÂ 
.
ÂÂ 
CreateIndex
ÂÂ (
(
ÂÂ( )
name
ÃÃ 
:
ÃÃ 
$str
ÃÃ %
,
ÃÃ% &
table
ÄÄ 
:
ÄÄ 
$str
ÄÄ $
,
ÄÄ$ %
column
ÅÅ 
:
ÅÅ 
$str
ÅÅ ,
,
ÅÅ, -
unique
ÆÆ 
:
ÆÆ 
true
ÆÆ 
,
ÆÆ 
filter
ÇÇ 
:
ÇÇ 
$str
ÇÇ :
)
ÇÇ: ;
;
ÇÇ; <
}
ÈÈ 	
	protected
ËË 
override
ËË 
void
ËË 
Down
ËË  $
(
ËË$ %
MigrationBuilder
ËË% 5
migrationBuilder
ËË6 F
)
ËËF G
{
ÌÌ 	
migrationBuilder
ÍÍ 
.
ÍÍ 
	DropTable
ÍÍ &
(
ÍÍ& '
name
ÎÎ 
:
ÎÎ 
$str
ÎÎ (
)
ÎÎ( )
;
ÎÎ) *
migrationBuilder
ÐÐ 
.
ÐÐ 
	DropTable
ÐÐ &
(
ÐÐ& '
name
ÑÑ 
:
ÑÑ 
$str
ÑÑ (
)
ÑÑ( )
;
ÑÑ) *
migrationBuilder
ÓÓ 
.
ÓÓ 
	DropTable
ÓÓ &
(
ÓÓ& '
name
ÔÔ 
:
ÔÔ 
$str
ÔÔ (
)
ÔÔ( )
;
ÔÔ) *
migrationBuilder
ÖÖ 
.
ÖÖ 
	DropTable
ÖÖ &
(
ÖÖ& '
name
×× 
:
×× 
$str
×× '
)
××' (
;
××( )
migrationBuilder
ÙÙ 
.
ÙÙ 
	DropTable
ÙÙ &
(
ÙÙ& '
name
ÚÚ 
:
ÚÚ 
$str
ÚÚ (
)
ÚÚ( )
;
ÚÚ) *
migrationBuilder
ÜÜ 
.
ÜÜ 
	DropTable
ÜÜ &
(
ÜÜ& '
name
ÝÝ 
:
ÝÝ 
$str
ÝÝ #
)
ÝÝ# $
;
ÝÝ$ %
migrationBuilder
ßß 
.
ßß 
	DropTable
ßß &
(
ßß& '
name
àà 
:
àà 
$str
àà #
)
àà# $
;
àà$ %
migrationBuilder
ââ 
.
ââ 
CreateTable
ââ (
(
ââ( )
name
ãã 
:
ãã 
$str
ãã 
,
ãã 
columns
ää 
:
ää 
table
ää 
=>
ää !
new
ää" %
{
åå 
UserId
ææ 
=
ææ 
table
ææ "
.
ææ" #
Column
ææ# )
<
ææ) *
int
ææ* -
>
ææ- .
(
ææ. /
type
ææ/ 3
:
ææ3 4
$str
ææ5 :
,
ææ: ;
nullable
ææ< D
:
ææD E
false
ææF K
)
ææK L
.
çç 

Annotation
çç #
(
çç# $
$str
çç$ 8
,
çç8 9
$str
çç: @
)
çç@ A
,
ççA B
Address
èè 
=
èè 
table
èè #
.
èè# $
Column
èè$ *
<
èè* +
string
èè+ 1
>
èè1 2
(
èè2 3
type
èè3 7
:
èè7 8
$str
èè9 H
,
èèH I
nullable
èèJ R
:
èèR S
false
èèT Y
)
èèY Z
,
èèZ [
Email
éé 
=
éé 
table
éé !
.
éé! "
Column
éé" (
<
éé( )
string
éé) /
>
éé/ 0
(
éé0 1
type
éé1 5
:
éé5 6
$str
éé7 F
,
ééF G
nullable
ééH P
:
ééP Q
false
ééR W
)
ééW X
,
ééX Y
Name
êê 
=
êê 
table
êê  
.
êê  !
Column
êê! '
<
êê' (
string
êê( .
>
êê. /
(
êê/ 0
type
êê0 4
:
êê4 5
$str
êê6 E
,
êêE F
nullable
êêG O
:
êêO P
false
êêQ V
)
êêV W
,
êêW X
Password
ëë 
=
ëë 
table
ëë $
.
ëë$ %
Column
ëë% +
<
ëë+ ,
string
ëë, 2
>
ëë2 3
(
ëë3 4
type
ëë4 8
:
ëë8 9
$str
ëë: I
,
ëëI J
nullable
ëëK S
:
ëëS T
false
ëëU Z
)
ëëZ [
}
ìì 
,
ìì 
constraints
íí 
:
íí 
table
íí "
=>
íí# %
{
îî 
table
ïï 
.
ïï 

PrimaryKey
ïï $
(
ïï$ %
$str
ïï% /
,
ïï/ 0
x
ïï1 2
=>
ïï3 5
x
ïï6 7
.
ïï7 8
UserId
ïï8 >
)
ïï> ?
;
ïï? @
}
ðð 
)
ðð 
;
ðð 
}
ññ 	
}
òò 
}óó °
NC:\Users\parthiv\Documents\Parthiv\ASP .NET Core\DemoPractical\Models\Movie.cs
	namespace 	
DemoPractical
 
. 
Models 
{ 
public 

class 
Movie 
{ 
public 
int 
MovieId 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
	MovieName 
{  !
get" %
;% &
set' *
;* +
}+ ,
public		 
int		 
Year		 
{		 
get		 
;		 
set		 "
;		" #
}		$ %
[

 	
Range

	 
(

 
$num

 
,

 
$num

 
)

 
]

 
public 
double 
Rating 
{ 
get "
;" #
set$ '
;' (
}) *
[ 	
Range	 
( 
$num 
, 
$num 
) 
] 
public 
double 
Length 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Genre 
{ 
get !
;! "
set# &
;& '
}( )
} 
} Ù!
IC:\Users\parthiv\Documents\Parthiv\ASP .NET Core\DemoPractical\Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder 
. 
Services 
. 
AddMvc 
( 
) 
; 
builder 
. 
Services 
. -
!AddFluentValidationAutoValidation 2
(2 3
)3 4
;4 5
builder 
. 
Host 
. 

UseSerilog 
( 
( 
context  
,  !
configuration" /
)/ 0
=>1 3
configuration 
. 
ReadFrom "
." #
Configuration# 0
(0 1
context1 8
.8 9
Configuration9 F
)F G
)G H
;H I
builder 
. 
Services 
. 
AddDbContext 
< 
MovieDBContext ,
>, -
(- .
options 
=> 
options 
. 
UseSqlServer #
(# $
builder$ +
.+ ,
Configuration, 9
.9 :
GetConnectionString: M
(M N
$strN T
)T U
)U V
)V W
;W X
builder 
. 
Services 
. 
AddIdentity 
< 
IdentityUser )
,) *
IdentityRole* 6
>6 7
(7 8
)8 9
. $
AddEntityFrameworkStores 
< 
MovieDBContext ,
>, -
(- .
). /
;/ 0
builder 
. 
Services 
. 
AddTransient 
< 
IMovieRepository .
,. /
MovieRepository0 ?
>? @
(@ A
)A B
;B C
builder 
. 
Services 
. 
	AddScoped 
< 

IValidator %
<% &
Movie& +
>+ ,
,, -
MovieValidator. <
>< =
(= >
)> ?
;? @
builder 
. 
Services 
. 
	AddScoped 
< 

IValidator %
<% &
RegisterViewModel& 7
>7 8
,8 9
UserValidator: G
>G H
(H I
)I J
;J K
builder   
.   
Services   
.   
AddControllers   
(    
)    !
;  ! "
builder"" 
."" 
Services"" 
."" #
AddEndpointsApiExplorer"" (
(""( )
)"") *
;""* +
builder## 
.## 
Services## 
.## 
AddSwaggerGen## 
(## 
)##  
;##  !
var%% 
app%% 
=%% 	
builder%%
 
.%% 
Build%% 
(%% 
)%% 
;%% 
if(( 
((( 
app(( 
.(( 
Environment(( 
.(( 
IsDevelopment(( !
(((! "
)((" #
)((# $
{)) 
app** 
.** 

UseSwagger** 
(** 
)** 
;** 
app++ 
.++ 
UseSwaggerUI++ 
(++ 
)++ 
;++ 
},, 
app-- 
.-- $
UseSerilogRequestLogging-- 
(-- 
)-- 
;-- 
app.. 
... 
UseHttpsRedirection.. 
(.. 
).. 
;.. 
app// 
.// 
UseAuthentication// 
(// 
)// 
;// 
app00 
.00 
UseAuthorization00 
(00 
)00 
;00 
app22 
.22 
MapControllers22 
(22 
)22 
;22 
app44 
.44 
Run44 
(44 
)44 	
;44	 

]C:\Users\parthiv\Documents\Parthiv\ASP .NET Core\DemoPractical\Repository\IMovieRepository.cs
	namespace 	
DemoPractical
 
. 

Repository "
{ 
public 

	interface 
IMovieRepository %
{ 
IEnumerable 
< 
Movie 
> 
GetAllMovieDetails -
(- .
). /
;/ 0
Movie !
GetMovieDetailsByName #
(# $
string$ *
name+ /
)/ 0
;0 1
string		 
AddNewMovie		 
(		 
Movie		  
movie		! &
)		& '
;		' (
string

 
UpdateMovieDetails

 !
(

! "
string

" (
name

) -
,

- .
Movie

/ 4
movie

5 :
)

: ;
;

; <
string 
DeleteMovieDetails !
(! "
string" (
name) -
)- .
;. /
} 
} Ô*
\C:\Users\parthiv\Documents\Parthiv\ASP .NET Core\DemoPractical\Repository\MovieRepository.cs
	namespace 	
DemoPractical
 
. 

Repository "
{ 
public 

class 
MovieRepository  
:! "
IMovieRepository# 3
{ 
private		 
readonly		 
MovieDBContext		 '
_context		( 0
;		0 1
public 
MovieRepository 
( 
MovieDBContext -
movieDBContext. <
)< =
{ 	
_context 
= 
movieDBContext %
;% &
} 	
public 
string 
AddNewMovie !
(! "
Movie" '
movie( -
)- .
{ 	
_context 
. 
Movies 
. 
Add 
(  
movie  %
)% &
;& '
var 
op 
= 
_context 
. 
SaveChanges )
() *
)* +
;+ ,
if 
( 
op 
> 
$num 
) 
{ 
return 
$str 2
;2 3
} 
else 
{ 
return 
$str E
;E F
} 
} 	
public 
string 
DeleteMovieDetails (
(( )
string) /
name0 4
)4 5
{ 	
var   
deleteMovie   
=   
_context   &
.  & '
Movies  ' -
.  - .
Where  . 3
(  3 4
m  4 5
=>  6 8
m  9 :
.  : ;
	MovieName  ; D
==  E G
name  H L
)  L M
.  M N
FirstOrDefault  N \
(  \ ]
)  ] ^
;  ^ _
if!! 
(!! 
name!! 
!=!! 
null!! 
)!! 
{"" 
_context## 
.## 
Movies## 
.##  
Remove##  &
(##& '
deleteMovie##' 2
)##2 3
;##3 4
_context$$ 
.$$ 
SaveChanges$$ $
($$$ %
)$$% &
;$$& '
return%% 
$str%% 4
;%%4 5
}&& 
else'' 
{(( 
return)) 
$str)) 0
;))0 1
}** 
}++ 	
public-- 
IEnumerable-- 
<-- 
Movie--  
>--  !
GetAllMovieDetails--" 4
(--4 5
)--5 6
{.. 	
return// 
_context// 
.// 
Movies// "
.//" #
ToList//# )
(//) *
)//* +
;//+ ,
}00 	
public22 
Movie22 !
GetMovieDetailsByName22 *
(22* +
string22+ 1
name222 6
)226 7
{33 	
var44 
movieDetails44 
=44 
_context44 '
.44' (
Movies44( .
.44. /
Where44/ 4
(444 5
m445 6
=>447 9
m44: ;
.44; <
	MovieName44< E
==44F H
name44I M
)44M N
.44N O
FirstOrDefault44O ]
(44] ^
)44^ _
;44_ `
if55 
(55 
movieDetails55 
==55 
null55  $
)55$ %
{66 
return77 
null77 
;77 
}88 
else99 
{:: 
return;; 
movieDetails;; #
;;;# $
}<< 
}== 	
public?? 
string?? 
UpdateMovieDetails?? (
(??( )
string??) /
name??0 4
,??4 5
Movie??6 ;
movie??< A
)??A B
{@@ 	
varAA 
	editMovieAA 
=AA 
_contextAA $
.AA$ %
MoviesAA% +
.AA+ ,
WhereAA, 1
(AA1 2
mAA2 3
=>AA4 6
mAA7 8
.AA8 9
	MovieNameAA9 B
==AAC E
nameAAF J
)AAJ K
.AAK L
FirstOrDefaultAAL Z
(AAZ [
)AA[ \
;AA\ ]
ifBB 
(BB 
nameBB 
!=BB 
nullBB 
)BB 
{CC 
	editMovieDD 
.DD 
	MovieNameDD #
=DD$ %
movieDD& +
.DD+ ,
	MovieNameDD, 5
;DD5 6
	editMovieEE 
.EE 
YearEE 
=EE  
movieEE! &
.EE& '
YearEE' +
;EE+ ,
	editMovieFF 
.FF 
RatingFF  
=FF! "
movieFF# (
.FF( )
RatingFF) /
;FF/ 0
	editMovieGG 
.GG 
LengthGG  
=GG! "
movieGG# (
.GG( )
LengthGG) /
;GG/ 0
	editMovieHH 
.HH 
GenreHH 
=HH  !
movieHH" '
.HH' (
GenreHH( -
;HH- .
_contextII 
.II 
SaveChangesII $
(II$ %
)II% &
;II& '
returnJJ 
$strJJ 3
;JJ3 4
}KK 
elseLL 
{MM 
returnNN 
$strNN 0
;NN0 1
}OO 
}PP 	
}QQ 
}RR Ì
\C:\Users\parthiv\Documents\Parthiv\ASP .NET Core\DemoPractical\Validations\MovieValidator.cs
	namespace 	
DemoPractical
 
. 
Validations #
{ 
public 

class 
MovieValidator 
:  
AbstractValidator! 2
<2 3
Movie3 8
>8 9
{ 
public 
MovieValidator 
( 
) 
{		 	
RuleFor

 
(

 
m

 
=>

 
m

 
.

 
	MovieName

 $
)

$ %
.

% &
NotEmpty

& .
(

. /
)

/ 0
;

0 1
RuleFor 
( 
m 
=> 
m 
. 
Year 
)  
.  !
NotEmpty! )
() *
)* +
.+ ,
LessThanOrEqualTo, =
(= >
DateTime> F
.F G
UtcNowG M
.M N
YearN R
)R S
;S T
RuleFor 
( 
m 
=> 
m 
. 
Rating !
)! "
." #
NotEmpty# +
(+ ,
), -
.- .
InclusiveBetween. >
(> ?
$num? @
,@ A
$numB D
)D E
;E F
RuleFor 
( 
m 
=> 
m 
. 
Length !
)! "
." #
NotEmpty# +
(+ ,
), -
.- .
InclusiveBetween. >
(> ?
$num? @
,@ A
$numB C
)C D
;D E
RuleFor 
( 
m 
=> 
m 
. 
Genre  
)  !
.! "
NotEmpty" *
(* +
)+ ,
;, -
} 	
} 
} Ã
[C:\Users\parthiv\Documents\Parthiv\ASP .NET Core\DemoPractical\Validations\UserValidator.cs
	namespace 	
DemoPractical
 
. 
Validations #
{ 
public 

class 
UserValidator 
: 
AbstractValidator  1
<1 2
RegisterViewModel2 C
>C D
{ 
public 
UserValidator 
( 
) 
{		 	
RuleFor

 
(

 
u

 
=>

 
u

 
.

 
Email

  
)

  !
.

! "
NotEmpty

" *
(

* +
)

+ ,
.

, -
EmailAddress

- 9
(

9 :
)

: ;
;

; <
RuleFor 
( 
u 
=> 
u 
. 
Password #
)# $
.$ %
NotEmpty% -
(- .
). /
;/ 0
RuleFor 
( 
u 
=> 
u 
. 
ConfirmPassword *
)* +
.+ ,
NotEmpty, 4
(4 5
)5 6
.6 7
Equal7 <
(< =
u= >
=>? A
uB C
.C D
PasswordD L
)L M
.M N
WithMessageN Y
(Y Z
$strZ u
)u v
;v w
} 	
} 
} ´
[C:\Users\parthiv\Documents\Parthiv\ASP .NET Core\DemoPractical\ViewModels\LoginViewModel.cs
	namespace 	
DemoPractical
 
. 

ViewModels "
{ 
public 

class 
LoginViewModel 
{ 
[ 	
Required	 
] 
[ 	
DataType	 
( 
DataType 
. 
EmailAddress '
,' (
ErrorMessage) 5
=6 7
$str8 Z
)Z [
][ \
public		 
string		 
Email		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
[ 	
Required	 
] 
[ 	
DataType	 
( 
DataType 
. 
Password #
)# $
]$ %
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} §
^C:\Users\parthiv\Documents\Parthiv\ASP .NET Core\DemoPractical\ViewModels\RegisterViewModel.cs
	namespace 	
DemoPractical
 
. 

ViewModels "
{ 
public 

class 
RegisterViewModel "
{ 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
[		 	
DataType			 
(		 
DataType		 
.		 
Password		 #
)		# $
]		$ %
public

 
string

 
Password

 
{

  
get

! $
;

$ %
set

& )
;

) *
}

+ ,
[ 	
DataType	 
( 
DataType 
. 
Password #
)# $
]$ %
public 
string 
ConfirmPassword %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
} 
} 